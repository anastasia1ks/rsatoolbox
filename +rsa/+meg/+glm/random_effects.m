%% thresholding beta maps generated by GLM using cluster level statistics %%

% loading responses
path = '/imaging/iz01/NeuroLex/cochleagram_HD/RDMs/';

%%%%%%%%%%%%%%%%
% all subjects %
%%%%%%%%%%%%%%%%
subjectNames = { ...
    'meg08_0320', ...
    'meg08_0323', ...
    'meg08_0324', ...
    'meg08_0327', ...
    'meg08_0348', ...
    'meg08_0350', ...
    'meg08_0366', ...
    'meg08_0371', ...
    'meg08_0372', ...
    'meg08_0377', ...
    'meg08_0397', ...
    'meg08_0400', ...
    'meg08_0401', ...
    'meg08_0402' ...
    };

% loading predictors
predictors = { ...
    'Models-GTF1to30ms'; ...
    'VoiceModel'; ...
    'placeModel';
    'mannerModel';
    };

scale = [15; 5; 5; -15]; % cochlear, voice, place, manner


for predictor = 1:length(predictors)
    
    disp(predictors{predictor});
    
    % beta for each model, subject, time, vertex
    beta = zeros(length(subjectNames),10242,22);
    
    for h =1:2
        if h==1, chi='L'; disp(' left hemisphere: ');
        else chi = 'R'; disp( ' right hemisphere: '); end
        
        for subject = 1:length(subjectNames)
            
            file = mne_read_stc_file1(['/imaging/iz01/NeuroLex/glm/betaMaps/' subjectNames{subject} '_' predictors{predictor} '-' lower(chi) 'h.stc']);
            
            beta(subject,:,:) = file.data;
            
        end % subject
        
        thresh_beta = zeros(10242,22);
        p_values = nan(10242,22);
        significant_beta = zeros(10242,22);
        
        for vertex = 1:10242
            
            if max(max(beta(:,vertex,:))) > 0 % only for non zero vertices
                
                b = beta(:,vertex,:);
                
                fpmin = 1;
                fpmax = 1;
                tpmin = 1;
                tpmax = size(b,3);
                perm_num = 1000;
                test = 2; % test=1 for a 1 sample t-test, test=2 for a paired t-test
                pval = 0.05;
                data1 = b;
                data2 = zeros(size(b));
                tmapFlag = 'true';
                [clust_stats_pos, clust_stats_neg, base_map] = ...
                    permutation_cluster_test_2dtfr_func(data1, ...
                    data2,fpmin,fpmax,tpmin,tpmax,perm_num,test,pval,tmapFlag);
                
                threshold = tinv(pval,(length(subjectNames)-1));
                thresh_map = ((base_map>= abs(threshold)) .* base_map) + ((base_map <= threshold) .* base_map);
                
                disp(['vertex: ' num2str(vertex)]);
                disp('cluster stats: ');
                disp(num2str(clust_stats_pos));
                
                % putting p values corresponding to vertices
                thresh_map(thresh_map < 0) = 0;
                thresh_beta(vertex,:) = thresh_map;
                %thresh_map (thresh_map > 0)  = 1;
                
                where = find(thresh_map > 0); % only positive clusters
                
                cluster = 1;
                for k=1:length(where)
                    if k==1
                        p_values(vertex,where(k)) = clust_stats_pos(cluster,2);
                    else
                        if where(k-1)  == where(k)-1
                            p_values(vertex,where(k)) = clust_stats_pos(cluster,2);
                        else
                            cluster = cluster+1;
                            p_values(vertex,where(k)) = clust_stats_pos(cluster,2);
                        end
                    end
                end
                
                significant_beta(vertex,:) = thresh_beta(vertex,:);
                significant_beta(vertex, find(p_values(vertex,:) > pval)) = 0;
            end 
            
        end % vertex
        
        disp('Saving files... ');
        
        % write thresholded map
        file.data = thresh_beta;
        mne_write_stc_file1(['/imaging/iz01/NeuroLex/glm/betaMaps/thresholded/allSubjects_' predictors{predictor} '_thresholded_tmap-' lower(chi) 'h.stc'], file);
        
        % write significance maps based on cluster level permutation
        file.data = significant_beta;
        mne_write_stc_file1(['/imaging/iz01/NeuroLex/glm/betaMaps/significant/allSubjects_' predictors{predictor} '_significant_tmap-' lower(chi) 'h.stc'], file);
        
        % p values (after cluster analysis)
        file.data = p_values;
        mne_write_stc_file1(['/imaging/iz01/NeuroLex/glm/betaMaps/thresholded/allSubjects_' predictors{predictor} '_p_values-' lower(chi) 'h.stc'], file);
        
    end % hemisphere
end % predictor

%     [c i]  = max(beta);
%
%     color_maps = scale(i);
%     color_maps(c==0) = 0;
%
%     beta_model_corr(subject,:,:) = reshape(color_maps,10242,22);
%
%     file.data = squeeze(beta_model_corr(subject,:,:));
%     mne_write_stc_file1(['/imaging/iz01/NeuroLex/glm/betaMaps/' subjectNames{subject} '_colormap-' lower(chi) 'h.stc'],file);
%
%     max_beta(subject,:,:) = reshape(c,10242,22);
%
%     clear beta file c i color_maps;
